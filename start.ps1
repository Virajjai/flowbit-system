Write-Host "üöÄ Starting Flowbit Multi-Tenant Workflow System..." -ForegroundColor Green
Write-Host "=================================================" -ForegroundColor Green

# Check if Docker is running
try {
    docker info | Out-Null
    Write-Host "‚úÖ Docker is running" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Docker is not running. Please start Docker first." -ForegroundColor Red
    exit 1
}

# Check if Docker Compose is available
try {
    docker-compose --version | Out-Null
    Write-Host "‚úÖ Docker Compose is available" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Docker Compose not found. Please install Docker Compose." -ForegroundColor Red
    exit 1
}

# Stop any existing containers
Write-Host "üõë Stopping existing containers..." -ForegroundColor Yellow
docker-compose down

# Pull latest images
Write-Host "üì¶ Pulling latest images..." -ForegroundColor Yellow
docker-compose pull

# Build and start services
Write-Host "üèóÔ∏è Building and starting services..." -ForegroundColor Yellow
docker-compose up -d --build

# Wait for services to start
Write-Host "‚è≥ Waiting for services to start..." -ForegroundColor Yellow
Start-Sleep -Seconds 10

# Check service status
Write-Host "üîç Checking service status..." -ForegroundColor Yellow
docker-compose ps

# Wait for MongoDB to be ready
Write-Host "üçÉ Waiting for MongoDB to initialize..." -ForegroundColor Yellow
Start-Sleep -Seconds 5

# Test API health
Write-Host "üè• Testing API health..." -ForegroundColor Yellow
try {
    $response = Invoke-RestMethod -Uri "http://localhost:3001/health" -Method Get -TimeoutSec 5
    Write-Host "‚úÖ API is healthy" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è API may still be starting..." -ForegroundColor Yellow
}

Write-Host ""
Write-Host "üéâ System started successfully!" -ForegroundColor Green
Write-Host "=================================================" -ForegroundColor Green
Write-Host ""
Write-Host "Access Points:" -ForegroundColor Cyan
Write-Host "‚Ä¢ Frontend Shell: http://localhost:3000" -ForegroundColor White
Write-Host "‚Ä¢ Support Tickets: http://localhost:3002" -ForegroundColor White
Write-Host "‚Ä¢ API: http://localhost:3001" -ForegroundColor White
Write-Host "‚Ä¢ n8n Dashboard: http://localhost:5678" -ForegroundColor White
Write-Host "‚Ä¢ MongoDB: localhost:27017" -ForegroundColor White
Write-Host ""
Write-Host "Test Users:" -ForegroundColor Cyan
Write-Host "‚Ä¢ LogisticsCo Admin: admin@logistics-co.com / password123" -ForegroundColor White
Write-Host "‚Ä¢ RetailGmbH Admin: admin@retail-gmbh.com / password123" -ForegroundColor White
Write-Host "‚Ä¢ LogisticsCo User: user@logistics-co.com / password123" -ForegroundColor White
Write-Host "‚Ä¢ RetailGmbH User: user@retail-gmbh.com / password123" -ForegroundColor White
Write-Host ""
Write-Host "To view logs: docker-compose logs -f [service]" -ForegroundColor Yellow
Write-Host "To stop: docker-compose down" -ForegroundColor Yellow
Write-Host ""
Write-Host "üé• Ready for demo!" -ForegroundColor Green
